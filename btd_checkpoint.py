# -*- coding: utf-8 -*-
"""BTD-checkpoint.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pPeN9jPwYEl93AzYHqgWQ32ptZpEWosz
"""

import tensorflow as tf
import keras
from keras.models import Sequential
from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense

classifier = Sequential()

classifier.add(Conv2D(32, (3, 3), input_shape = (64, 64, 3), activation = 'sigmoid'))

classifier.add(MaxPooling2D(pool_size = (2, 2)))

classifier.add(Conv2D(32, (3, 3), activation = 'sigmoid'))
classifier.add(MaxPooling2D(pool_size = (2, 2)))

classifier.add(Flatten())

classifier.add(Dense(activation = 'sigmoid',units=128))
classifier.add(Dense(activation = 'sigmoid',units=1))

classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])

classifier.summary()

from keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(rescale = 1./255,
                                   shear_range = 0.2,
                                   zoom_range = 0.2,
                                   horizontal_flip = True)

test_datagen = ImageDataGenerator(rescale = 1./255)

import os 
os.getcwd()
os.chdir(r'C:\Users\Nishant\Desktop\projects\deeeplearning-project\Brain_tumor')
print(os.getcwd())

training_set = train_datagen.flow_from_directory(r'C:\Users\Nishant\Desktop\projects\deeeplearning-project\Brain_tumor\train',
                                                 target_size = (64, 64),
                                                 batch_size = 32,
                                                 class_mode = 'binary')

test_set = test_datagen.flow_from_directory(r'C:\Users\Nishant\Desktop\projects\deeeplearning-project\Brain_tumor\test',
                                            target_size = (64, 64),
                                            batch_size = 32,
                                            class_mode = 'binary')

classifier.fit_generator(training_set, steps_per_epoch=None, epochs=100, verbose=1, callbacks=None, validation_data=test_set, validation_steps=None, class_weight=None, max_queue_size=10, workers=1, use_multiprocessing=False, shuffle=True, initial_epoch=0)

import numpy as np
from keras.preprocessing import image
test_image = image.load_img(r'C:\Users\YAKUB\Desktop\projects\deeeplearning-project\TestImages\brain-tumors-fig2_large.jpg', target_size = (64, 64))
test_image

test_image = image.img_to_array(test_image)

test_image = np.expand_dims(test_image, axis = 0)
test_image

result = classifier.predict(test_image)
result

training_set.class_indices

if result[0][0] == 0:
    prediction = 'Benign'
else:
    prediction = 'Malignent'
print("Detected tumor type is %s"%prediction)

